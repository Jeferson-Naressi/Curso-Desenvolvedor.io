// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteDeFilmes.Data;

#nullable disable

namespace SiteDeFilmes.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SiteDeFilmes.Models.Atores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1)");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("Atores", (string)null);
                });

            modelBuilder.Entity("SiteDeFilmes.Models.ElencoFilmes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdAtor")
                        .HasColumnType("int");

                    b.Property<int>("IdFilmes")
                        .HasColumnType("int");

                    b.Property<string>("Papel")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.HasIndex("IdAtor");

                    b.HasIndex("IdFilmes");

                    b.ToTable("ElencoFilmes", (string)null);
                });

            modelBuilder.Entity("SiteDeFilmes.Models.Filmes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Filmes", (string)null);
                });

            modelBuilder.Entity("SiteDeFilmes.Models.FilmesGeneros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdFilmes")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFilmes");

                    b.HasIndex("IdGenero");

                    b.ToTable("FilmesGeneros", (string)null);
                });

            modelBuilder.Entity("SiteDeFilmes.Models.Generos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("Generos", (string)null);
                });

            modelBuilder.Entity("SiteDeFilmes.Models.ElencoFilmes", b =>
                {
                    b.HasOne("SiteDeFilmes.Models.Atores", "Atores")
                        .WithMany("ElencoFilmes")
                        .HasForeignKey("IdAtor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteDeFilmes.Models.Filmes", "Filme")
                        .WithMany("ElencoFilmes")
                        .HasForeignKey("IdFilmes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atores");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("SiteDeFilmes.Models.FilmesGeneros", b =>
                {
                    b.HasOne("SiteDeFilmes.Models.Filmes", "Filme")
                        .WithMany("FilmesGeneros")
                        .HasForeignKey("IdFilmes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteDeFilmes.Models.Generos", "Genero")
                        .WithMany("FilmesGeneros")
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("SiteDeFilmes.Models.Atores", b =>
                {
                    b.Navigation("ElencoFilmes");
                });

            modelBuilder.Entity("SiteDeFilmes.Models.Filmes", b =>
                {
                    b.Navigation("ElencoFilmes");

                    b.Navigation("FilmesGeneros");
                });

            modelBuilder.Entity("SiteDeFilmes.Models.Generos", b =>
                {
                    b.Navigation("FilmesGeneros");
                });
#pragma warning restore 612, 618
        }
    }
}
